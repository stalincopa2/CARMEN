@model CARMEN.Models.CATEGORIA

@{
    ViewBag.Title = "Edit";
    string srcImage = "/Content/Images/productIcon.png";
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "Categorias", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
        <h4>CATEGORIA</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID_CATEGORIA)

        <div class="form-group">
            @Html.LabelFor(model => model.NOMBRE, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NOMBRE, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NOMBRE, "", new { @class = "text-danger" })
            </div>
        </div>
         @Html.HiddenFor(model => model.DESCRIPCION);
        <div class="form-group">
            @Html.LabelFor(model => model.DESCRIPCION, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file"  id="FILE_CATEGORIA" class="form-control" onchange="return fileValidation(this)" />
            </div>
        </div>
        <div class="form-group">
            <div id="imagePreview">
                    @if (Model.DESCRIPCION != "NA")
                    {
    srcImage = "/Content/ImgCategorias/" + Model.DESCRIPCION;
}
                <img src="@srcImage" width="50" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>
    function fileValidation() {
        var fileInput = document.getElementById('FILE_CATEGORIA');
        var filePath = fileInput.value;
        var allowedExtensions = /(\.jpg|\.jpeg|\.png)$/i;
        if (!allowedExtensions.exec(filePath)) {
            alert('Solo se admiten imagenes en formato .jpg .jpeg y .png');
            fileInput.value = '';
            return false;
        } else {
            return validarImagen();
        }
    }

    function validarImagen() {

        var fileInput = document.getElementById('FILE_CATEGORIA');
        var fileSize = $('#FILE_CATEGORIA')[0].files[0].size;
        var siezekiloByte = parseInt(fileSize * 0.001);

        if (siezekiloByte > $('#FILE_CATEGORIA').attr('size')) {
            alert("Imagen muy pesada");
            fileInput.value = '';
            return false;
        } else if (fileInput.files && fileInput.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                document.getElementById(
                    'imagePreview').innerHTML =
                    '<img src="' + e.target.result
                    + '" width="100" height ="100"/>';
                fileInput.setAttribute("name", "FILE_CATEGORIA");
            };
            reader.readAsDataURL(fileInput.files[0]);
            return true;
        }
    }

</script>

